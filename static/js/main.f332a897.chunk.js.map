{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","redux/phone-book/phonebook-selector.js","redux/phone-book/phonebook-actions.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","components/Section/Section.js","components/App.js","reportWebVitals.js","redux/phone-book/phonebook-reducer.js","redux/store.js","index.js","components/Form/Form.module.css","components/ContactList/Contats.module.css"],"names":["module","exports","getFilter","state","phonebook","filter","getFilterName","contacts","getContact","normalizedName","toLowerCase","contact","name","includes","actions","addContact","createAction","payload","number","id","shortid","generate","deleteContact","filterContact","ContactList","useSelector","dispatch","useDispatch","length","map","className","s","item","type","onClick","onDelete","contactBtn","Form","useState","setState","useForm","register","handleSubmit","reset","oninputHandler","target","value","onSubmit","text","alert","a","label","ref","onChange","placeholder","addBtn","Filter","filterLabel","Section","title","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contactsReducer","createReducer","initialContactList","filterReducer","_","phonebookReducer","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","storeObj","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f332a897.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__j--By\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__oiNqK\"};","export const getContact = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const getFilterName = state => {\r\n  const contacts = getContact(state);\r\n  const filter = getFilter(state);\r\n  const normalizedName = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedName),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nimport shortid from 'short-id';\r\n\r\nconst addContact = createAction('contact/add', contact => ({\r\n  payload: {\r\n    name: contact.name,\r\n    number: contact.number,\r\n    id: shortid.generate(),\r\n  },\r\n}));\r\nconst deleteContact = createAction('contact/delete');\r\nconst filterContact = createAction('contact/change');\r\n\r\nconst actions = { addContact, deleteContact, filterContact };\r\nexport default actions;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getFilterName } from '../../redux/phone-book/phonebook-selector';\r\n\r\nimport s from './Contats.module.css';\r\nimport actions from '../../redux/phone-book/phonebook-actions';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getFilterName);\r\n  const dispatch = useDispatch();\r\n  const onDelete = id => dispatch(actions.deleteContact(id));\r\n\r\n  if (contacts.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onDelete(id);\r\n            }}\r\n            className={s.contactBtn}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\n\r\nimport actions from '../../redux/phone-book/phonebook-actions';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = () => {\r\n  const [state, setState] = useState();\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  const onSubmit = text => dispatch(actions.addContact(text));\r\n\r\n  const oninputHandler = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState(state => ({ ...state, [name]: value }));\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n    const { name, number } = state;\r\n    !name || !number ? alert(`Some field are empty`) : onSubmit(state);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmitHandler)} className={s.a}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          ref={register}\r\n          name=\"name\"\r\n          onChange={oninputHandler}\r\n          placeholder=\"Enter name\"\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          ref={register}\r\n          name=\"number\"\r\n          onChange={oninputHandler}\r\n          placeholder=\"Enter phone number\"\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.addBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/phone-book/phonebook-selector';\r\nimport s from './Filter.module.css';\r\nimport actions from '../../redux/phone-book/phonebook-actions';\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = ({ target }) =>\r\n    dispatch(actions.filterContact(target.value));\r\n  return (\r\n    <>\r\n      <label className={s.filterLabel}>\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={onChange}\r\n          placeholder=\"Enter name to filter\"\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport s from './Section.module.css';\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import ContactList from './ContactList';\nimport Form from './Form';\nimport Filter from './Filter';\nimport Section from './Section';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n\n        <ContactList />\n      </Section>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport actions from './phonebook-actions';\r\n\r\nimport initialContactList from '../../components/initialContactList.json';\r\n\r\nconst contactsReducer = createReducer(initialContactList, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\nexport default phonebookReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReducer from './phone-book/phonebook-reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(persistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storeObj = { store, persistor };\r\n\r\nexport default storeObj;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport storeObj from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={storeObj.store}>\n      <PersistGate loading={'Loading...'} persistor={storeObj.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__3_oYg\",\"a\":\"Form_a__3euZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contats_item__2ittI\",\"contactBtn\":\"Contats_contactBtn__7jOgj\"};"],"sourceRoot":""}